{"version":3,"sources":["js/timer.js","js/index.js"],"names":["Timer","selector","timerSelector","timerSelects","document","querySelectorAll","diss","totalTime","timeHasPassed","started","interval","timeout","clearInterval","clearTimeout","timestamp","total","forEach","select","disabled","setInterval","setTimeout","clearPlanning","selected","num","String","padStart","resetBtn","querySelector","pauseBtn","addEventListener","start","pause","reset","currentTime","Date","parse","toString","seconds","Math","floor","minutes","hours","date","timer","setHours","getHours","value","setMinutes","getMinutes","setSeconds","getSeconds","isReset","time","textContent","window"],"mappings":"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","file":"js.798a4944.js","sourceRoot":"..\\src","sourcesContent":["class Timer {\r\n   constructor(selector) {\r\n      this.timerSelector = selector;\r\n      this.timerSelects = document.querySelectorAll('.timer-setting__select');\r\n      this.diss = 0;\r\n      this.totalTime = 0;\r\n      this.timeHasPassed = 0;\r\n      this.started = false;\r\n      this.interval = null;\r\n      this.timeout = null;\r\n\r\n      this.#setup();\r\n   }\r\n\r\n   clearPlanning() {\r\n      clearInterval(this.interval);\r\n      clearTimeout(this.timeout);\r\n   }\r\n\r\n   #addZero(num) {\r\n      return String(num).padStart(2, '0');\r\n   }\r\n\r\n   #setup() {\r\n      const resetBtn = document.querySelector('#reset'),\r\n            pauseBtn = document.querySelector('#pause'),\r\n            startBtn = document.querySelector('#start');\r\n\r\n      startBtn.addEventListener('click', () => this.start());\r\n      pauseBtn.addEventListener('click', () => this.pause());\r\n      resetBtn.addEventListener('click', () => this.reset());\r\n   }\r\n\r\n   #getTimeRemaining(timestamp) {\r\n      const currentTime = Date.parse(new Date().toString());\r\n\r\n      this.diss = (timestamp - this.timeHasPassed) - currentTime;\r\n\r\n      const seconds = Math.floor((this.diss / 1000) % 60),\r\n            minutes = Math.floor((this.diss / 1000 / 60) % 60),\r\n            hours = Math.floor((this.diss / 1000/ 60 / 60) % 60);\r\n\r\n      return {\r\n         'total': this.diss,\r\n         'hours': hours,\r\n         'minutes': minutes,\r\n         'seconds': seconds\r\n      }\r\n   }\r\n\r\n   #getTimeTemplate(selector = this.timerSelector) {\r\n      const date = new Date(),\r\n            timer = document.querySelector(selector),\r\n            hours = timer.querySelector('#set-hours'),\r\n            minutes = timer.querySelector('#set-minutes'),\r\n            seconds = timer.querySelector('#set-seconds');\r\n\r\n      date.setHours(date.getHours() + +hours.value);\r\n      date.setMinutes(date.getMinutes() + +minutes.value);\r\n      date.setSeconds(date.getSeconds() + +seconds.value);\r\n\r\n      return Date.parse(date.toString());\r\n   }\r\n\r\n   #setClock(timestamp, isReset = false, selector = this.timerSelector) {\r\n      const timer = document.querySelector(selector),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            time = this.#getTimeRemaining(timestamp);\r\n\r\n      hours.textContent = !isReset ? this.#addZero(time.hours) : '00';\r\n      minutes.textContent = !isReset ? this.#addZero(time.minutes) : '00';\r\n      seconds.textContent = !isReset ? this.#addZero(time.seconds) : '00';\r\n   }\r\n\r\n   start() {\r\n      const timestamp = this.#getTimeTemplate();\r\n      this.totalTime = this.#getTimeRemaining(timestamp).total;\r\n\r\n      if (this.totalTime > 0) {\r\n         this.timerSelects.forEach(select => select.disabled = true);\r\n\r\n         this.interval = setInterval(() => {\r\n            this.#setClock(timestamp);\r\n         }, 1000);\r\n\r\n         this.timeout = setTimeout(this.clearPlanning, this.totalTime);\r\n      }\r\n\r\n      this.started = true;\r\n   }\r\n\r\n   pause() {\r\n      if (!this.started) return;\r\n      \r\n      this.clearPlanning();\r\n      this.timeHasPassed = this.totalTime - this.diss;\r\n      this.started = false;\r\n   }\r\n\r\n   reset() {\r\n      if (!this.started) return;\r\n\r\n      this.clearPlanning();\r\n      this.#setClock(0, true);\r\n      this.timerSelects.forEach(select => {\r\n         select.disabled = false;\r\n         select[0].selected = true;\r\n      });\r\n      this.started = false;\r\n   }\r\n}\r\n\r\nexport default Timer;","import Timer from \"./timer\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n   const timer = new Timer('.timer');\r\n});\r\n\r\n\r\n\r\n\r\n"]}