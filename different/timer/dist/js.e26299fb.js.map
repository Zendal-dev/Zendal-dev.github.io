{"version":3,"sources":["js/timer.js","js/index.js"],"names":["Timer","selector","_timerSelector","_timerSelects","document","querySelectorAll","_diss","_totalTime","_timeHasPassed","_started","_interval","_timeout","init","clearInterval","clearTimeout","num","String","padStart","resetBtn","querySelector","pauseBtn","addEventListener","start","pause","reset","timestamp","currentTime","Date","parse","toString","seconds","Math","floor","minutes","hours","date","timer","setHours","getHours","value","setMinutes","getMinutes","setSeconds","getSeconds","isReset","time","getTimeRemaining","textContent","addZero","getTimeTemplate","total","forEach","select","disabled","setInterval","setClock","setTimeout","clearPlanning","selected","window"],"mappings":"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","file":"js.e26299fb.js","sourceRoot":"..\\src","sourcesContent":["class Timer {\r\n   constructor(selector) {\r\n      this._timerSelector = selector;\r\n      this._timerSelects = document.querySelectorAll('.timer-setting__select');\r\n      this._diss = 0;\r\n      this._totalTime = 0;\r\n      this._timeHasPassed = 0;\r\n      this._started = false;\r\n      this._interval = null;\r\n      this._timeout = null;\r\n\r\n      this.init();\r\n   }\r\n\r\n   clearPlanning() {\r\n      clearInterval(this._interval);\r\n      clearTimeout(this._timeout);\r\n   }\r\n\r\n   addZero(num) {\r\n      return String(num).padStart(2, '0');\r\n   }\r\n\r\n   init() {\r\n      const resetBtn = document.querySelector('#reset'),\r\n            pauseBtn = document.querySelector('#pause'),\r\n            startBtn = document.querySelector('#start');\r\n\r\n      startBtn.addEventListener('click', () => this.start());\r\n      pauseBtn.addEventListener('click', () => this.pause());\r\n      resetBtn.addEventListener('click', () => this.reset());\r\n   }\r\n\r\n   getTimeRemaining(timestamp) {\r\n      const currentTime = Date.parse(new Date().toString());\r\n\r\n      this._diss = (timestamp - this._timeHasPassed) - currentTime;\r\n\r\n      const seconds = Math.floor((this._diss / 1000) % 60),\r\n            minutes = Math.floor((this._diss / 1000 / 60) % 60),\r\n            hours = Math.floor((this._diss / 1000/ 60 / 60) % 60);\r\n\r\n      return {\r\n         'total': this._diss,\r\n         'hours': hours,\r\n         'minutes': minutes,\r\n         'seconds': seconds\r\n      }\r\n   }\r\n\r\n   getTimeTemplate(selector = this._timerSelector) {\r\n      const date = new Date(),\r\n            timer = document.querySelector(selector),\r\n            hours = timer.querySelector('#set-hours'),\r\n            minutes = timer.querySelector('#set-minutes'),\r\n            seconds = timer.querySelector('#set-seconds');\r\n\r\n      date.setHours(date.getHours() + +hours.value);\r\n      date.setMinutes(date.getMinutes() + +minutes.value);\r\n      date.setSeconds(date.getSeconds() + +seconds.value);\r\n\r\n      return Date.parse(date.toString());\r\n   }\r\n\r\n   setClock(timestamp, isReset = false, selector = this._timerSelector) {\r\n      const timer = document.querySelector(selector),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            time = this.getTimeRemaining(timestamp);\r\n\r\n      hours.textContent = !isReset ? this.addZero(time.hours) : '00';\r\n      minutes.textContent = !isReset ? this.addZero(time.minutes) : '00';\r\n      seconds.textContent = !isReset ? this.addZero(time.seconds) : '00';\r\n   }\r\n\r\n   start() {\r\n      const timestamp = this.getTimeTemplate();\r\n      this._totalTime = this.getTimeRemaining(timestamp).total;\r\n\r\n      if (this._totalTime > 0) {\r\n         this._timerSelects.forEach(select => select.disabled = true);\r\n\r\n         this._interval = setInterval(() => {\r\n            this.setClock(timestamp);\r\n         }, 1000);\r\n\r\n         this._timeout = setTimeout(this.clearPlanning, this._totalTime);\r\n      }\r\n\r\n      this._started = true;\r\n   }\r\n\r\n   pause() {\r\n      if (!this._started) return;\r\n      \r\n      this.clearPlanning();\r\n      this._timeHasPassed = this._totalTime - this._diss;\r\n      this._started = false;\r\n   }\r\n\r\n   reset() {\r\n      if (!this._started) return;\r\n\r\n      this.clearPlanning();\r\n      this.setClock(0, true);\r\n      this._timerSelects.forEach(select => {\r\n         select.disabled = false;\r\n         select[0].selected = true;\r\n      });\r\n      this._started = false;\r\n   }\r\n}\r\n\r\nexport default Timer;","import Timer from \"./timer\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n   const timer = new Timer('.timer');\r\n});\r\n\r\n\r\n\r\n\r\n"]}