{"version":3,"sources":["../node_modules/custom-event-polyfill/custom-event-polyfill.js","../src/index.js","js/customSelect.js","js/modules/Game.js","js/index.js"],"names":["document","querySelectorAll","Game","countdownField","querySelector","expressionField","userSolutionField","calcBody","started","solved","TIMEOUT","maxInt","correctAnswersCount","incorrectAnswersCount","intervalID","trueAnswer","userAnswer","operation","methods","a","b","calcBodyHandlerWrap","e","calcBodyHandler","init","onchange","target","options","selectedIndex","dataset","addEventListener","startBtnHandler","resetBtnHandler","max","Math","floor","random","correctCount","wrongCount","textContent","maxCountField","startTime","Date","now","value","setInterval","time","clearInterval","showResultWindow","generateNewGameIteration","randomInts","getRandomInt","event","btnData","btn","length","slice","parentElement","okBtnHandler","removeEventListener","window"],"mappings":"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","file":"js.ad46da2b.js","sourceRoot":"..\\src","sourcesContent":["// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n","/**\n * custom-select\n * A lightweight JS script for custom select creation.\n * Needs no dependencies.\n *\n * v0.0.1\n * (https://github.com/custom-select/custom-select)\n *\n * Copyright (c) 2016 Gionatan Lombardi & Marco Nucara\n * MIT License\n */\n\nimport 'custom-event-polyfill';\n\nconst defaultParams = {\n  containerClass: 'custom-select-container',\n  openerClass: 'custom-select-opener',\n  panelClass: 'custom-select-panel',\n  optionClass: 'custom-select-option',\n  optgroupClass: 'custom-select-optgroup',\n  isSelectedClass: 'is-selected',\n  hasFocusClass: 'has-focus',\n  isDisabledClass: 'is-disabled',\n  isOpenClass: 'is-open',\n};\n\nfunction builder(el, builderParams) {\n  const containerClass = 'customSelect';\n  let isOpen = false;\n  let uId = '';\n  const select = el;\n  let container;\n  let opener;\n  let focusedElement;\n  let selectedElement;\n  let panel;\n  let currLabel;\n\n  let resetSearchTimeout;\n  let searchKey = '';\n\n  //\n  // Inner Functions\n  //\n\n  // Sets the focused element with the neccessary classes substitutions\n  function setFocusedElement(cstOption) {\n    if (focusedElement) {\n      focusedElement.classList.remove(builderParams.hasFocusClass);\n    }\n    if (typeof cstOption !== 'undefined') {\n      focusedElement = cstOption;\n      focusedElement.classList.add(builderParams.hasFocusClass);\n      // Offset update: checks if the focused element is in the visible part of the panelClass\n      // if not dispatches a custom event\n      if (isOpen) {\n        if (cstOption.offsetTop < cstOption.offsetParent.scrollTop\n          || cstOption.offsetTop >\n            (cstOption.offsetParent.scrollTop + cstOption.offsetParent.clientHeight)\n            - cstOption.clientHeight) {\n          cstOption.dispatchEvent(new CustomEvent('custom-select:focus-outside-panel', { bubbles: true }));\n        }\n      }\n    } else {\n      focusedElement = undefined;\n    }\n  }\n\n  // Reassigns the focused and selected custom option\n  // Updates the opener text\n  // IMPORTANT: the setSelectedElement function doesn't change the select value!\n  function setSelectedElement(cstOption) {\n    if (selectedElement) {\n      selectedElement.classList.remove(builderParams.isSelectedClass);\n      selectedElement.removeAttribute('id');\n      opener.removeAttribute('aria-activedescendant');\n    }\n    if (typeof cstOption !== 'undefined') {\n      cstOption.classList.add(builderParams.isSelectedClass);\n      cstOption.setAttribute('id', `${containerClass}-${uId}-selectedOption`);\n      opener.setAttribute('aria-activedescendant', `${containerClass}-${uId}-selectedOption`);\n      selectedElement = cstOption;\n      opener.children[0].textContent = selectedElement.customSelectOriginalOption.text;\n    } else {\n      selectedElement = undefined;\n      opener.children[0].textContent = '';\n    }\n    setFocusedElement(cstOption);\n  }\n\n  function setValue(value) {\n    // Gets the option with the provided value\n    let toSelect = select.querySelector(`option[value='${value}']`);\n    // If no option has the provided value get the first\n    if (!toSelect) {\n      [toSelect] = select.options;\n    }\n    // The option with the provided value becomes the selected one\n    // And changes the select current value\n    toSelect.selected = true;\n\n    setSelectedElement(select.options[select.selectedIndex].customSelectCstOption);\n  }\n\n  function moveFocuesedElement(direction) {\n    // Get all the .custom-select-options\n    // Get the index of the current focused one\n    const currentFocusedIndex =\n      [].indexOf.call(select.options, focusedElement.customSelectOriginalOption);\n    // If the next or prev custom option exist\n    // Sets it as the new focused one\n    if (select.options[currentFocusedIndex + direction]) {\n      setFocusedElement(select.options[currentFocusedIndex + direction].customSelectCstOption);\n    }\n  }\n\n  // Open/Close function (toggle)\n  function open(bool) {\n    // Open\n    if (bool || typeof bool === 'undefined') {\n      // If present closes an opened instance of the plugin\n      // Only one at time can be open\n      const openedCustomSelect =\n        document.querySelector(`.${containerClass}.${builderParams.isOpenClass}`);\n      if (openedCustomSelect) {\n        openedCustomSelect.customSelect.open = false;\n      }\n\n      // Opens only the clicked one\n      container.classList.add(builderParams.isOpenClass);\n\n      // aria-expanded update\n      container.classList.add(builderParams.isOpenClass);\n      opener.setAttribute('aria-expanded', 'true');\n\n      // Updates the scrollTop position of the panel in relation with the focused option\n      if (selectedElement) {\n        panel.scrollTop = selectedElement.offsetTop;\n      }\n\n      // Dispatches the custom event open\n      container.dispatchEvent(new CustomEvent('custom-select:open'));\n\n      // Sets the global state\n      isOpen = true;\n\n    // Close\n    } else {\n      // Removes the css classes\n      container.classList.remove(builderParams.isOpenClass);\n\n      // aria-expanded update\n      opener.setAttribute('aria-expanded', 'false');\n\n      // Sets the global state\n      isOpen = false;\n\n      // When closing the panel the focused custom option must be the selected one\n      setFocusedElement(selectedElement);\n\n      // Dispatches the custom event close\n      container.dispatchEvent(new CustomEvent('custom-select:close'));\n    }\n    return isOpen;\n  }\n\n  function clickEvent(e) {\n    // Opener click\n    if (e.target === opener || opener.contains(e.target)) {\n      if (isOpen) {\n        open(false);\n      } else {\n        open();\n      }\n    // Custom Option click\n    } else if (\n      e.target.classList\n      && e.target.classList.contains(builderParams.optionClass)\n      && panel.contains(e.target)) {\n      setSelectedElement(e.target);\n      // Sets the corrisponding select's option to selected updating the select's value too\n      selectedElement.customSelectOriginalOption.selected = true;\n      open(false);\n      // Triggers the native change event of the select\n      select.dispatchEvent(new CustomEvent('change'));\n    // click on label or select (click on label corrispond to select click)\n    } else if (e.target === select) {\n      // if the original select is focusable (for any external reason) let the focus\n      // else trigger the focus on opener\n      if (opener !== document.activeElement && select !== document.activeElement) {\n        opener.focus();\n      }\n    // Click outside the container closes the panel\n    } else if (isOpen && !container.contains(e.target)) {\n      open(false);\n    }\n  }\n\n  function mouseoverEvent(e) {\n    // On mouse move over and options it bacames the focused one\n    if (e.target.classList && e.target.classList.contains(builderParams.optionClass)) {\n      setFocusedElement(e.target);\n    }\n  }\n\n  function keydownEvent(e) {\n    if (!isOpen) {\n      // On \"Arrow down\", \"Arrow up\" and \"Space\" keys opens the panel\n      if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32) {\n        open();\n      }\n    } else {\n      switch (e.keyCode) {\n        case 13:\n        case 32:\n          // On \"Enter\" or \"Space\" selects the focused element as the selected one\n          setSelectedElement(focusedElement);\n          // Sets the corrisponding select's option to selected updating the select's value too\n          selectedElement.customSelectOriginalOption.selected = true;\n          // Triggers the native change event of the select\n          select.dispatchEvent(new CustomEvent('change'));\n          open(false);\n          break;\n        case 27:\n          // On \"Escape\" closes the panel\n          open(false);\n          break;\n\n        case 38:\n          // On \"Arrow up\" set focus to the prev option if present\n          moveFocuesedElement(-1);\n          break;\n        case 40:\n          // On \"Arrow down\" set focus to the next option if present\n          moveFocuesedElement(+1);\n          break;\n        default:\n          // search in panel (autocomplete)\n          if (e.keyCode >= 48 && e.keyCode <= 90) {\n            // clear existing reset timeout\n            if (resetSearchTimeout) {\n              clearTimeout(resetSearchTimeout);\n            }\n\n            // reset timeout for empty search key\n            resetSearchTimeout = setTimeout(() => {\n              searchKey = '';\n            }, 1500);\n\n            // update search keyword appending the current key\n            searchKey += String.fromCharCode(e.keyCode);\n\n            // search the element\n            for (let i = 0, l = select.options.length; i < l; i++) {\n              // removed cause not supported by IE:\n              // if (options[i].text.startsWith(searchKey))\n              if (select.options[i].text.toUpperCase().substr(0, searchKey.length) === searchKey) {\n                setFocusedElement(select.options[i].customSelectCstOption);\n                break;\n              }\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  function changeEvent() {\n    const index = select.selectedIndex;\n    const element = index === -1 ? undefined : select.options[index].customSelectCstOption;\n\n    setSelectedElement(element);\n  }\n\n  // When the option is outside the visible part of the opened panel, updates the scrollTop position\n  // This is the default behaviour\n  // To block it the plugin user must\n  // add a \"custom-select:focus-outside-panel\" eventListener on the panel\n  // with useCapture set to true\n  // and stopPropagation\n  function scrollToFocused(e) {\n    const currPanel = e.currentTarget;\n    const currOption = e.target;\n    // Up\n    if (currOption.offsetTop < currPanel.scrollTop) {\n      currPanel.scrollTop = currOption.offsetTop;\n    // Down\n    } else {\n      currPanel.scrollTop = (currOption.offsetTop + currOption.clientHeight)\n      - currPanel.clientHeight;\n    }\n  }\n\n  function addEvents() {\n    document.addEventListener('click', clickEvent);\n    panel.addEventListener('mouseover', mouseoverEvent);\n    panel.addEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.addEventListener('change', changeEvent);\n    container.addEventListener('keydown', keydownEvent);\n  }\n\n  function removeEvents() {\n    document.removeEventListener('click', clickEvent);\n    panel.removeEventListener('mouseover', mouseoverEvent);\n    panel.removeEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.removeEventListener('change', changeEvent);\n    container.removeEventListener('keydown', keydownEvent);\n  }\n\n  function disabled(bool) {\n    if (bool && !select.disabled) {\n      container.classList.add(builderParams.isDisabledClass);\n      select.disabled = true;\n      opener.removeAttribute('tabindex');\n      container.dispatchEvent(new CustomEvent('custom-select:disabled'));\n      removeEvents();\n    } else if (!bool && select.disabled) {\n      container.classList.remove(builderParams.isDisabledClass);\n      select.disabled = false;\n      opener.setAttribute('tabindex', '0');\n      container.dispatchEvent(new CustomEvent('custom-select:enabled'));\n      addEvents();\n    }\n  }\n\n  // Form a given select children DOM tree (options and optgroup),\n  // Creates the corresponding custom HTMLElements list (divs with different classes and attributes)\n  function parseMarkup(children) {\n    const nodeList = children;\n    const cstList = [];\n\n    if (typeof nodeList.length === 'undefined') {\n      throw new TypeError('Invalid Argument');\n    }\n\n    for (let i = 0, li = nodeList.length; i < li; i++) {\n      if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTGROUP') {\n        const cstOptgroup = document.createElement('div');\n        cstOptgroup.classList.add(builderParams.optgroupClass);\n        cstOptgroup.setAttribute('data-label', nodeList[i].label);\n\n        // IMPORTANT: Stores in a property of the created custom option group\n        // a hook to the the corrisponding select's option group\n        cstOptgroup.customSelectOriginalOptgroup = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option group\n        // a hook to the created custom option group\n        nodeList[i].customSelectCstOptgroup = cstOptgroup;\n\n        const subNodes = parseMarkup(nodeList[i].children);\n        for (let j = 0, lj = subNodes.length; j < lj; j++) {\n          cstOptgroup.appendChild(subNodes[j]);\n        }\n\n        cstList.push(cstOptgroup);\n      } else if (nodeList[i] instanceof HTMLElement\n          && nodeList[i].tagName.toUpperCase() === 'OPTION') {\n        const cstOption = document.createElement('div');\n        cstOption.classList.add(builderParams.optionClass);\n        cstOption.textContent = nodeList[i].text;\n        cstOption.setAttribute('data-value', nodeList[i].value);\n        cstOption.setAttribute('role', 'option');\n\n        // IMPORTANT: Stores in a property of the created custom option\n        // a hook to the the corrisponding select's option\n        cstOption.customSelectOriginalOption = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option\n        // a hook to the created custom option\n        nodeList[i].customSelectCstOption = cstOption;\n\n        // If the select's option is selected\n        if (nodeList[i].selected) {\n          setSelectedElement(cstOption);\n        }\n        cstList.push(cstOption);\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n    }\n    return cstList;\n  }\n\n  function append(nodePar, appendIntoOriginal, targetPar) {\n    let target;\n    if (typeof targetPar === 'undefined'\n      || (targetPar === select)) {\n      target = panel;\n    } else if (targetPar instanceof HTMLElement\n      && targetPar.tagName.toUpperCase() === 'OPTGROUP'\n      && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // If the node provided is a single HTMLElement it is stored in an array\n    const node = nodePar instanceof HTMLElement ? [nodePar] : nodePar;\n\n    // Injects the options|optgroup in the select\n    if (appendIntoOriginal) {\n      for (let i = 0, l = node.length; i < l; i++) {\n        if (target === panel) {\n          select.appendChild(node[i]);\n        } else {\n          target.customSelectOriginalOptgroup.appendChild(node[i]);\n        }\n      }\n    }\n\n    // The custom markup to append\n    const markupToInsert = parseMarkup(node);\n\n    // Injects the created DOM content in the panel\n    for (let i = 0, l = markupToInsert.length; i < l; i++) {\n      target.appendChild(markupToInsert[i]);\n    }\n\n    return node;\n  }\n\n  function insertBefore(node, targetPar) {\n    let target;\n    if (targetPar instanceof HTMLElement\n      && targetPar.tagName.toUpperCase() === 'OPTION'\n      && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOption;\n    } else if (targetPar instanceof HTMLElement\n      && targetPar.tagName.toUpperCase() === 'OPTGROUP'\n      && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // The custom markup to append\n    const markupToInsert = parseMarkup(node.length ? node : [node]);\n\n    target.parentNode.insertBefore(markupToInsert[0], target);\n\n    // Injects the option or optgroup node in the original select and returns the injected node\n    return targetPar.parentNode.insertBefore(node.length ? node[0] : node, targetPar);\n  }\n\n  function remove(node) {\n    let cstNode;\n    if (node instanceof HTMLElement\n      && node.tagName.toUpperCase() === 'OPTION'\n      && select.contains(node)) {\n      cstNode = node.customSelectCstOption;\n    } else if (node instanceof HTMLElement\n      && node.tagName.toUpperCase() === 'OPTGROUP'\n      && select.contains(node)) {\n      cstNode = node.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n    cstNode.parentNode.removeChild(cstNode);\n    const removedNode = node.parentNode.removeChild(node);\n    changeEvent();\n    return removedNode;\n  }\n\n  function empty() {\n    const removed = [];\n    while (select.children.length) {\n      panel.removeChild(panel.children[0]);\n      removed.push(select.removeChild(select.children[0]));\n    }\n    setSelectedElement();\n    return removed;\n  }\n\n  function destroy() {\n    for (let i = 0, l = select.options.length; i < l; i++) {\n      delete select.options[i].customSelectCstOption;\n    }\n    const optGroup = select.getElementsByTagName('optgroup');\n    for (let i = 0, l = optGroup.length; i < l; i++) {\n      delete optGroup.customSelectCstOptgroup;\n    }\n\n    removeEvents();\n\n    return container.parentNode.replaceChild(select, container);\n  }\n  //\n  // Custom Select DOM tree creation\n  //\n\n  // Creates the container/wrapper\n  container = document.createElement('div');\n  container.classList.add(builderParams.containerClass, containerClass);\n\n  // Creates the opener\n  opener = document.createElement('span');\n  opener.className = builderParams.openerClass;\n  opener.setAttribute('role', 'combobox');\n  opener.setAttribute('aria-autocomplete', 'list');\n  opener.setAttribute('aria-expanded', 'false');\n  opener.innerHTML = `<span>\n   ${(select.selectedIndex !== -1 ? select.options[select.selectedIndex].text : '')}\n   </span>`;\n\n  // Creates the panel\n  // and injects the markup of the select inside\n  // with some tag and attributes replacement\n  panel = document.createElement('div');\n  // Create random id\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < 5; i++) {\n    uId += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  panel.id = `${containerClass}-${uId}-panel`;\n  panel.className = builderParams.panelClass;\n  panel.setAttribute('role', 'listbox');\n  opener.setAttribute('aria-owns', panel.id);\n\n  append(select.children, false);\n\n  // Injects the container in the original DOM position of the select\n  container.appendChild(opener);\n  select.parentNode.replaceChild(container, select);\n  container.appendChild(select);\n  container.appendChild(panel);\n\n  // ARIA labelledby - label\n  if (document.querySelector(`label[for=\"${select.id}\"]`)) {\n    currLabel = document.querySelector(`label[for=\"${select.id}\"]`);\n  } else if (container.parentNode.tagName.toUpperCase() === 'LABEL') {\n    currLabel = container.parentNode;\n  }\n  if (typeof currLabel !== 'undefined') {\n    currLabel.setAttribute('id', `${containerClass}-${uId}-label`);\n    opener.setAttribute('aria-labelledby', `${containerClass}-${uId}-label`);\n  }\n\n  // Event Init\n  if (select.disabled) {\n    container.classList.add(builderParams.isDisabledClass);\n  } else {\n    opener.setAttribute('tabindex', '0');\n    select.setAttribute('tabindex', '-1');\n    addEvents();\n  }\n\n  // Stores the plugin public exposed methods and properties, directly in the container HTMLElement\n  container.customSelect = {\n    get pluginOptions() { return builderParams; },\n    get open() { return isOpen; },\n    set open(bool) {\n      open(bool);\n    },\n    get disabled() { return select.disabled; },\n    set disabled(bool) {\n      disabled(bool);\n    },\n    get value() { return select.value; },\n    set value(val) {\n      setValue(val);\n    },\n    append: (node, target) => append(node, true, target),\n    insertBefore: (node, target) => insertBefore(node, target),\n    remove,\n    empty,\n    destroy,\n    opener,\n    select,\n    panel,\n    container,\n  };\n\n  // Stores the plugin directly in the original select\n  select.customSelect = container.customSelect;\n\n  // Returns the plugin instance, with the public exposed methods and properties\n  return container.customSelect;\n}\n\nexport default function customSelect(element, customParams) {\n  // Overrides the default options with the ones provided by the user\n  const nodeList = [];\n  const selects = [];\n\n  return (function init() {\n    // The plugin is called on a single HTMLElement\n    if (element && element instanceof HTMLElement && element.tagName.toUpperCase() === 'SELECT') {\n      nodeList.push(element);\n    // The plugin is called on a selector\n    } else if (element && typeof element === 'string') {\n      const elementsList = document.querySelectorAll(element);\n      for (let i = 0, l = elementsList.length; i < l; ++i) {\n        if (elementsList[i] instanceof HTMLElement\n          && elementsList[i].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(elementsList[i]);\n        }\n      }\n    // The plugin is called on any HTMLElements list (NodeList, HTMLCollection, Array, etc.)\n    } else if (element && element.length) {\n      for (let i = 0, l = element.length; i < l; ++i) {\n        if (element[i] instanceof HTMLElement\n          && element[i].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(element[i]);\n        }\n      }\n    }\n\n    // Launches the plugin over every HTMLElement\n    // And stores every plugin instance\n    for (let i = 0, l = nodeList.length; i < l; ++i) {\n      selects.push(builder(nodeList[i], Object.assign({}, defaultParams, customParams)));\n    }\n\n    // Returns all plugin instances\n    return selects;\n  }());\n}\n","import customSelect from 'custom-select';\r\n\r\ncustomSelect(document.querySelectorAll('.setting-panel__select'));\r\n","class Game {\r\n   constructor() {\r\n      this.countdownField = document.querySelector('.time-left');\r\n      this.expressionField = document.querySelector('.expression');\r\n      this.userSolutionField = document.querySelector('.user-response');\r\n      this.calcBody = document.querySelector('.calc-body');\r\n\r\n      this.started = false;\r\n      this.solved = false;\r\n\r\n      this.TIMEOUT = 1000 * 20;\r\n      this.maxInt = 0;\r\n      this.correctAnswersCount = 0;\r\n      this.incorrectAnswersCount = 0;\r\n      this.intervalID = null;\r\n      this.trueAnswer = null;\r\n      this.userAnswer = null;\r\n      this.operation = '+';\r\n\r\n      this.methods = {\r\n         '+': ({a, b} = {}) => a + b,\r\n         '-': ({a, b} = {}) => a - b,\r\n         '*': ({a, b} = {}) => a * b,\r\n         '/': ({a, b} = {}) => a / b\r\n      };\r\n\r\n      this.calcBodyHandlerWrap = (e) => this.calcBodyHandler(e);\r\n      this.init();\r\n   }\r\n\r\n   init() {\r\n      const operatorSelect = document.querySelector('#operation');\r\n      operatorSelect.onchange = function(e) {\r\n         this.operation = e.target.options[e.target.selectedIndex].dataset.operation;\r\n      };\r\n\r\n      const startBtn = document.querySelector('.btn-start');\r\n      startBtn.addEventListener('click', () => this.startBtnHandler());\r\n\r\n      const resetBtn = document.querySelector('.btn-reset');\r\n      resetBtn.addEventListener('click', () => this.resetBtnHandler());\r\n   }\r\n\r\n   getRandomInt(max) {\r\n      return Math.floor(Math.random() * Math.floor(max));\r\n   }\r\n\r\n   showResultWindow() {\r\n      const correctCount = document.querySelector('.correct-count'),\r\n         wrongCount = document.querySelector('.wrong-count');\r\n\r\n      correctCount.textContent = this.correctAnswersCount;\r\n      wrongCount.textContent = this.incorrectAnswersCount;\r\n   }\r\n\r\n   startBtnHandler() {\r\n      if (this.started) return;\r\n\r\n      const maxCountField = document.querySelector('#max-value');\r\n      const startTime = Date.now();\r\n\r\n      this.started = true;\r\n      this.maxInt = +maxCountField.value;\r\n\r\n      // Обратный отсчет\r\n      this.intervalID = setInterval(() => {\r\n         const time = this.TIMEOUT - (Date.now() - startTime);\r\n         this.countdownField.textContent = time;\r\n         if (time <= 0) {\r\n            clearInterval(this.intervalID);\r\n            this.showResultWindow();\r\n            this.countdownField.textContent = '0';\r\n         }\r\n      }, 0);\r\n\r\n      // Генерация и вывод рандомного выражения\r\n      this.generateNewGameIteration();\r\n\r\n      // Клик на любую кнопку\r\n      this.calcBody.addEventListener('click', this.calcBodyHandlerWrap);\r\n   }\r\n\r\n   generateNewGameIteration() {\r\n      const randomInts = { // TODO: Деструктуризация сделана криво. Придумать лучшее решение\r\n         a: this.getRandomInt(this.maxInt),\r\n         b: this.getRandomInt(this.maxInt)\r\n      };\r\n\r\n      // Вывод сгенерированного выражения\r\n      this.expressionField.textContent = `${randomInts.a} ${this.operation} ${randomInts.b}`;\r\n\r\n      // Запись правильного ответа\r\n      this.trueAnswer = this.methods[this.operation](randomInts);\r\n   }\r\n\r\n   calcBodyHandler(event) {\r\n      const target = event.target;\r\n      const MAX_ANSWER_LENGTH = 6;\r\n      const btnData = target.dataset.btn;\r\n\r\n      if (!this.started) return;\r\n\r\n      switch (true) {\r\n         case btnData === 'solution' :\r\n            this.userSolutionField.textContent = this.trueAnswer;\r\n            this.solved = true;\r\n            break;\r\n\r\n         case (btnData === 'del') && (this.userSolutionField.textContent.length > 0) :\r\n            this.userSolutionField.textContent = this.userSolutionField.textContent.slice(0, -1);\r\n            break;\r\n\r\n         case (btnData === 'num') && (this.userSolutionField.textContent.length < MAX_ANSWER_LENGTH) :\r\n            this.userSolutionField.textContent += target.textContent;\r\n            break;\r\n\r\n         case (btnData === 'next') || (target.parentElement.dataset.btn === 'next') :\r\n            this.generateNewGameIteration();\r\n            break;\r\n\r\n         case btnData === 'ok' :\r\n            if (this.solved) { // может быть защитывать в неправильные ответы\r\n               this.userSolutionField.textContent = '';\r\n               this.generateNewGameIteration();\r\n               this.solved = false;\r\n               break;\r\n            }\r\n            this.userAnswer = +this.userSolutionField.textContent;\r\n            this.okBtnHandler();\r\n            break;\r\n      }\r\n   }\r\n\r\n   okBtnHandler() {\r\n      if (this.trueAnswer === this.userAnswer) {\r\n         this.correctAnswersCount++;\r\n         this.userSolutionField.textContent = '';\r\n         this.generateNewGameIteration();\r\n      } else {\r\n         this.incorrectAnswersCount++;\r\n      }\r\n   }\r\n\r\n   resetBtnHandler() {\r\n      this.started = false;\r\n      this.userSolutionField.textContent = '';\r\n      this.expressionField.textContent = '';\r\n      clearInterval(this.intervalID);\r\n      this.countdownField.textContent = '0';\r\n      this.calcBody.removeEventListener('click', this.calcBodyHandlerWrap);\r\n   }\r\n}\r\n\r\nexport default Game;","import './customSelect';\r\nimport Game from \"./modules/Game\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n   'use strict';\r\n   const game = new Game();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]}